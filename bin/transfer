#!/bin/sh
#
# Defines transfer alias and provides easy command line file and folder sharing.
#
# Authors:
#   Remco Verhoef <remco@dutchcoders.io>
#

# Check for curl dependency
if ! command -v curl >/dev/null 2>&1; then
  echo "Error: curl is required but not found"
  exit 1
fi

transfer() {
    # Cleanup function
    cleanup() {
        [ -n "$tmpfile" ] && rm -f "$tmpfile"
        [ -n "$zipfile" ] && rm -f "$zipfile"
    }
    
    # Set trap to cleanup on exit
    trap cleanup EXIT INT TERM

    # Check arguments
    if [ $# -eq 0 ]; then
        echo "Usage:"
        echo "  transfer /path/to/file        # Upload file"
        echo "  transfer /path/to/directory   # Upload directory (zipped)"
        echo "  cat file | transfer name.txt  # Upload from stdin"
        return 1
    fi

    # Create temporary file
    tmpfile=$(mktemp -t transferXXX) || {
        echo "Error: Could not create temporary file"
        return 1
    }

    file="$1"

    if tty -s; then
        # Uploading from file/directory
        basefile=$(basename "$file" | sed -e 's/[^a-zA-Z0-9._-]/-/g')

        if [ ! -e "$file" ]; then
            echo "Error: File '$file' doesn't exist"
            return 1
        fi

        if [ ! -r "$file" ]; then
            echo "Error: Cannot read '$file'"
            return 1
        fi

        if [ -d "$file" ]; then
            # Zip directory and transfer
            echo "Compressing directory..."
            zipfile=$(mktemp -t transferXXX.zip) || {
                echo "Error: Could not create temporary zip file"
                return 1
            }
            
            if ! (cd "$(dirname "$file")" && zip -r -q - "$(basename "$file")" > "$zipfile"); then
                echo "Error: Failed to create zip archive"
                return 1
            fi
            
            echo "Uploading $(basename "$file").zip..."
            if ! curl --progress-bar --upload-file "$zipfile" "https://transfer.sh/$basefile.zip" > "$tmpfile"; then
                echo "Error: Upload failed"
                return 1
            fi
        else
            # Transfer single file
            echo "Uploading $(basename "$file")..."
            if ! curl --progress-bar --upload-file "$file" "https://transfer.sh/$basefile" > "$tmpfile"; then
                echo "Error: Upload failed"
                return 1
            fi
        fi
    else
        # Transfer from stdin
        echo "Uploading from stdin as '$file'..."
        if ! curl --progress-bar --upload-file "-" "https://transfer.sh/$file" > "$tmpfile"; then
            echo "Error: Upload failed"
            return 1
        fi
    fi

    # Show result
    echo ""
    echo "Upload successful!"
    echo "Download link:"
    cat "$tmpfile"
    echo ""
    echo "Note: Files are kept for 14 days and automatically deleted"
}

# If script is called directly (not sourced), run the function
case "$0" in
    */transfer) transfer "$@" ;;
esac
